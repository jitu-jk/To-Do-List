{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst taskslice = createSlice({\n  name: 'tasks',\n  initialState: [],\n  reducers: {\n    addTask: (state, action) => {\n      state.push({\n        id: Date.now(),\n        text: action.payload,\n        completed: false\n      });\n    },\n    deleteTask: (state, action) => {\n      return state.filter(task => task.id !== action.payload);\n    },\n    editTask: (state, action) => {\n      const task = state.find(task => task.id === action.payload.id);\n      if (task) {\n        task.text = action.payload.text;\n      }\n    },\n    toggleTask: (state, action) => {\n      const task = state.find(task => task.id === action.payload);\n      if (task) {\n        task.completed = !task.completed;\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask,\n  editTask,\n  toggleTask\n} = taskslice.actions;\nexport default taskslice.reducer;","map":{"version":3,"names":["createSlice","taskslice","name","initialState","reducers","addTask","state","action","push","id","Date","now","text","payload","completed","deleteTask","filter","task","editTask","find","toggleTask","actions","reducer"],"sources":["C:/Users/Jitesh Kumar/Desktop/To-Do-List/todo-list/src/features/tasks/taskslice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst taskslice = createSlice({\r\n  name: 'tasks',\r\n  initialState: [],\r\n  reducers: {\r\n    addTask: (state, action) => {\r\n      state.push({ id: Date.now(), text: action.payload, completed: false });\r\n    },\r\n    deleteTask: (state, action) => {\r\n      return state.filter(task => task.id !== action.payload);\r\n    },\r\n    editTask: (state, action) => {\r\n      const task = state.find(task => task.id === action.payload.id);\r\n      if (task) {\r\n        task.text = action.payload.text;\r\n      }\r\n    },\r\n    toggleTask: (state, action) => {\r\n      const task = state.find(task => task.id === action.payload);\r\n      if (task) {\r\n        task.completed = !task.completed;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addTask, deleteTask, editTask, toggleTask } = taskslice.actions;\r\nexport default taskslice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACE,IAAI,CAAC;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEL,MAAM,CAACM,OAAO;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IACxE,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAAC;IACzD,CAAC;IACDK,QAAQ,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMU,IAAI,GAAGX,KAAK,CAACa,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAACJ,EAAE,CAAC;MAC9D,IAAIQ,IAAI,EAAE;QACRA,IAAI,CAACL,IAAI,GAAGL,MAAM,CAACM,OAAO,CAACD,IAAI;MACjC;IACF,CAAC;IACDQ,UAAU,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMU,IAAI,GAAGX,KAAK,CAACa,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAAC;MAC3D,IAAII,IAAI,EAAE;QACRA,IAAI,CAACH,SAAS,GAAG,CAACG,IAAI,CAACH,SAAS;MAClC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,OAAO;EAAEU,UAAU;EAAEG,QAAQ;EAAEE;AAAW,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AAC9E,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}